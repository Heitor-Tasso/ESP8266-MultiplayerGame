
#:import image utils.image
#:import icon utils.icon
#:import Animation kivy.animation.Animation
#:import Clock kivy.clock.Clock

<GamePad>:
	BoxLayout:
		orientation: 'vertical'
		size_hint:None, None
		size: root.size
		canvas.before:
			Color:
				rgba: black_gray
			Rectangle:
				size:self.size
				pos:self.pos
			Color:
				rgba: [1,0, 0, 1]
			Rectangle:
				pos: root.pos_player
				size: [dp(70), dp(150)]
	
		FloatLayout:
			size_hint_y: None
			height:'50dp'
			BoxLayout:
				x: root.x
				y:
					root.animate_border_top((root.y+root.height-self.height), 0.3, self, 'down') \
					if btn_lay.state == 'down' else \
					root.animate_border_top((root.y+root.height), 0.3, self, 'normal')
				last_state: 'normal'
				Widget:
					size_hint_x: None
					width: '20dp'
				AnchorIcon:
					ButtonIcon:
						icon_source:icon('return')
						size: ['30dp', '30dp']
						on_press: root.exit_game()
				Widget:
				AnchorIcon:
					ButtonIcon:
						icon_source:icon('reload')
						size: ['30dp', '30dp']
						on_press: root.reload_json_position('default_position', 'position')
				AnchorIcon:
					ToggleButtonIcon:
						icon_source:icon('correct')
						size: ['30dp', '30dp']
						on_state: root.move_layout = True if self.state == 'down' else False
				Widget:
					size_hint_x: None
					width: '50dp'
			ToggleButtonIcon:
				state_sources:[icon('up-triangle'), icon('down-triangle')]
				id: btn_lay
				pos: [(root.x+root.width-(self.width*1.3)), (root.y+root.height-(self.height*1.3))]

		FloatLayout:
			id:content_pad
			Label:
				id: fps_lbl
				size_hint: None, None
				size: '100dp', '50dp'
				x: content_pad.x+(content_pad.width*0.5)-(self.width*0.5)
				y:content_pad.y+(content_pad.height*0.5)-(self.height*0.5)
				color: [1, 1, 1, 1]

			FloatLifes:
				id:lifes
			
			FloatButtonIcon:
				id:pad_left
				icon_source:image('pad_left')

			FloatButtonIcon:
				id:options
				icon_source:image('options')

			FloatButtonIcon:
				id:pad_right
				icon_source:image('pad_right')

			Joystick:
				id: joystick
				size_hint: None, None
				sticky: False
				outer_size: 1
				inner_size: 0.75
				pad_size: 0.5
				outer_line_width: 0.013
				inner_line_width: 0.013
				pad_line_width: 0.013
				outer_background_color: gray[0:-1] + [0.6]
				outer_line_color: white[0:-1] + [0.6]
				inner_background_color: super_gray[0:-1] + [0.2]
				inner_line_color: blue[0:-1] + [0.4]
				pad_background_color: blue
				pad_line_color: clear_white

			FloatButtonIcon:
				id: control_left
				state_sources:[image('attack'), image('attack-ab')]
				on_press: root.do_ataque()
				radius_effect: [self.width]
